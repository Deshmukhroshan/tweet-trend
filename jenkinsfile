pipeline {
    agent {
        node {
            label 'maven'
        }
    }

    stages {
        stage("build") {
            steps {
                echo "---------- Build started ----------"
                sh 'mvn clean deploy -Dmaven.test.skip=true'
                echo "---------- Build Completed ----------"
            }
        }

        stages("test") {
            steps {
                echo "---------- Unit Tests started ----------"
                sh 'mvn surefire-report:report'
                echo "---------- Unit Tests Completed ----------"
            }
        }    
       
        stage("sonarqube-scan") {
            environment {
            scannerHome = tool 'roshan-sonar-scanner'
            }
            steps {
                withSonarQubeEnv('roshan-sonarqube-server') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }

        stage("Quality Gate") {
            steps {
                script {
                    timeout(time: 1, unit: 'MINUTES') {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                                                }
                        }
                    }              
                }

            }
        }
    }

